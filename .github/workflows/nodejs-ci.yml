# Node.js CI workflow

name: Node.js CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IS_PUSH_MASTER: ${{ github.ref == 'refs/heads/develop' }}    
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Run lint
      run: yarn run lint
    - name: Run tests
      run: yarn run test-ci
    - name: Build
      run: yarn run build
  snyk:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build a Docker image
      run: docker build -t yanakiy/dwv .
    - name: Show Github ref
      run: echo ${{ github.ref }}
    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: yanakiy/dwv
        args: --file=Dockerfile
  publish_to_dockerhub:
    needs: snyk
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: yanakiy/dwv
      
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  deploy_to_cloud_pr:
    env:
      PROJECT_ID: "peaceful-elf-339317"
      SERVICE: "dwv"
      REGION: "europe-north1"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action
    - name: Authorize Docker push
      run: gcloud auth configure-docker
    - name: Check gcloud
      run: gcloud info
    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        echo ${{ github.event.pull_request.synchronized }}
        echo ${{ github.event.pull_request.action }}
    - name: Deploy to Cloud Run PR
      if: github.ref != 'refs/heads/develop'
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE }}-${{  github.sha }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
        region: ${{ env.REGION }}
    - name: Deploy to Cloud Run
      if: github.ref == 'refs/heads/develop'
      id: deploy_prod
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
        region: ${{ env.REGION }}    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action
    - name: Make PR service accessible
      if: github.ref != 'refs/heads/develop'
      run: |-
        gcloud config set project ${{ env.PROJECT_ID }}
        gcloud run services add-iam-policy-binding ${{ env.SERVICE }}-${{ github.sha }} \
        --member="allUsers" --region=${{ env.REGION }} --project=${{ env.PROJECT_ID }} \
        --role="roles/run.invoker" --quiet
    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }} ${{ steps.deploy_prod.outputs.url }}
    - name: PR Comment
      if: github.ref != 'refs/heads/develop'
      uses: github-actions-up-and-running/pr-comment@v1.0.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        message: Test your change at ${{ steps.deploy.outputs.url }}!üëç
